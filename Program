class Program
{
  static void Main()
  {
    Strings s = new Strings();

    s.GenerateRandoms(10, 10);
    s.ShowString();


    Console.ReadKey();

    InsertionSort i = new InsertionSort();
    i.Sort(s.randomString);
    s.ShowString();
  }
}

public class Strings
{
  public Strings() { 
    
  }

  Random randomNumber = new Random();
  public List<int> randomString = new List<int>();

  public void GenerateRandoms(int stringLength, int maxValue)
  {
    for (int i = 0; i < stringLength; i++) { 
      randomString.Add(randomNumber.Next(maxValue+1));
    }
  }

  public void ShowString()
  {
    Console.WriteLine(string.Join(", ", randomString));
  }
}

public class BubbleSort : ISorting
{
  public List<int> Sort(List<int> list)
  {
    int temporaryValue = 0;

    for (int i = 0; i < list.Count(); i++) 
    { 
      for(int j = 0; j < list.Count() - 1; j++)
      {
        if (list[j] > list[j + 1])
        {
          temporaryValue = list[j + 1];
          list[j + 1] = list[j];
          list[j] = temporaryValue;
        }
      }
    }

    return list;
  }
}

public class InsertionSort : ISorting
{
  public List<int> Sort(List<int> list)
  {
    int temporaryValue = 0;

    for (int i = 0; i < list.Count() - 1; i++)
    {
      if (list[i] > list[i + 1])
      {
        for (int j = 0; j < i; j++)
        {
          if (list[i+1] < list[j])
          {
            temporaryValue = list[j];
            list[j] = list[i + 1];
            list[i + 1] = temporaryValue;
          }
        }
      }
    }

    return list;
  }
}

public class QuickSort : ISorting
{
  public List<int> Sort(List<int> list)
  {
    int temporaryValue = 0;
    List<int> temporartList = new List<int>();

    int leftIndex = 0;
    int rightIndex = 0;
    int pivot = list[rightIndex];

    for(int i = 0; i < list.Count; i++)
    {
      if (list[i] > pivot)
      {
        temporartList.Add(list[i]);
      }
    }

    return list;
  }
}

public class Merge : ISorting //jeszcze nie czas...
{
  public List<int> Sort(List<int> list)
  {
    int temporaryValue = 0;
    int middleOne = 0;

    for (int i = 0; i <= list.Count(); i++)
    {
      List<int> temporaryList = new List<int>();

      middleOne = list.Count / 2;

      for(int j = 0; j < middleOne; j++)
      {
        temporaryList.Add(list[j]);
      }
    }

    return list;
  }
}

public interface ISorting
{
  public List<int> Sort(List<int> list);
}
